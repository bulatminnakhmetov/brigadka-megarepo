basePath: /api
definitions:
  cmd_service.HealthResponse:
    properties:
      status:
        type: string
      timestamp:
        type: string
      version:
        type: string
    type: object
  github_com_bulatminnakhmetov_brigadka-backend_internal_service_messaging.Chat:
    properties:
      chat_id:
        type: string
      chat_name:
        type: string
      created_at:
        type: string
      is_group:
        type: boolean
      participants:
        items:
          type: integer
        type: array
    type: object
  github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.City:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.Media:
    properties:
      id:
        type: integer
      thumbnail_url:
        type: string
      url:
        type: string
    type: object
  github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.Profile:
    properties:
      avatar:
        $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.Media'
      bio:
        type: string
      birthday:
        type: string
      city_id:
        type: integer
      created_at:
        type: string
      full_name:
        type: string
      gender:
        type: string
      goal:
        type: string
      improv_styles:
        items:
          type: string
        type: array
      looking_for_team:
        type: boolean
      user_id:
        type: integer
      videos:
        items:
          $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.Media'
        type: array
    type: object
  github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.ProfileCreateRequest:
    properties:
      avatar:
        type: integer
      bio:
        type: string
      birthday:
        type: string
      city_id:
        type: integer
      full_name:
        type: string
      gender:
        type: string
      goal:
        type: string
      improv_styles:
        items:
          type: string
        type: array
      looking_for_team:
        type: boolean
      user_id:
        type: integer
      videos:
        items:
          type: integer
        type: array
    required:
    - full_name
    - user_id
    type: object
  github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.ProfileUpdateRequest:
    properties:
      avatar:
        type: integer
      bio:
        type: string
      birthday:
        type: string
      city_id:
        type: integer
      full_name:
        type: string
      gender:
        type: string
      goal:
        type: string
      improv_styles:
        items:
          type: string
        type: array
      looking_for_team:
        type: boolean
      videos:
        items:
          type: integer
        type: array
    type: object
  github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.TranslatedItem:
    properties:
      code:
        type: string
      description:
        type: string
      label:
        type: string
    type: object
  internal_handler_auth.AuthResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
      user_id:
        type: integer
    type: object
  internal_handler_auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  internal_handler_auth.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  internal_handler_auth.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  internal_handler_media.MediaResponse:
    properties:
      id:
        type: integer
      thumbnail_url:
        type: string
      url:
        type: string
    type: object
  internal_handler_messaging.AddParticipantRequest:
    properties:
      user_id:
        type: integer
    type: object
  internal_handler_messaging.AddReactionRequest:
    properties:
      reaction_code:
        type: string
      reaction_id:
        type: string
    type: object
  internal_handler_messaging.AddReactionResponse:
    properties:
      reaction_id:
        type: string
    type: object
  internal_handler_messaging.ChatIDResponse:
    properties:
      chat_id:
        type: string
    type: object
  internal_handler_messaging.ChatMessage:
    properties:
      chat_id:
        type: string
      content:
        type: string
      message_id:
        type: string
      sender_id:
        type: integer
      sent_at:
        type: string
      type:
        type: string
    type: object
  internal_handler_messaging.CreateChatRequest:
    properties:
      chat_id:
        type: string
      chat_name:
        type: string
      participants:
        items:
          type: integer
        type: array
    type: object
  internal_handler_messaging.GetOrCreateDirectChatRequest:
    properties:
      user_id:
        type: integer
    type: object
  internal_handler_messaging.SendMessageRequest:
    properties:
      content:
        type: string
      message_id:
        type: string
    type: object
  internal_handler_profile.Date:
    properties:
      time.Time:
        type: string
    type: object
  internal_handler_profile.ProfileResponse:
    properties:
      avatar:
        $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.Media'
      bio:
        type: string
      birthday:
        $ref: '#/definitions/internal_handler_profile.Date'
      city_id:
        type: integer
      created_at:
        type: string
      full_name:
        type: string
      gender:
        type: string
      goal:
        type: string
      improv_styles:
        items:
          type: string
        type: array
      looking_for_team:
        type: boolean
      user_id:
        type: integer
      videos:
        items:
          $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.Media'
        type: array
    type: object
  internal_handler_profile.SearchRequest:
    properties:
      age_max:
        type: integer
      age_min:
        type: integer
      city_id:
        type: integer
      created_after:
        type: string
      full_name:
        type: string
      genders:
        items:
          type: string
        type: array
      goals:
        items:
          type: string
        type: array
      has_avatar:
        type: boolean
      has_video:
        type: boolean
      improv_styles:
        items:
          type: string
        type: array
      looking_for_team:
        type: boolean
      page:
        type: integer
      page_size:
        type: integer
    type: object
  internal_handler_profile.SearchResponse:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      profiles:
        items:
          $ref: '#/definitions/internal_handler_profile.ProfileResponse'
        type: array
      total_count:
        type: integer
    type: object
  internal_handler_push.TokenRequest:
    properties:
      device_id:
        type: string
      platform:
        type: string
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@brigadka.com
    name: API Support
  description: API для сервиса Brigadka
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Brigadka API
  version: "1.0"
paths:
  /api/auth/verify:
    get:
      consumes:
      - application/json
      description: Verify JWT token validity
      produces:
      - application/json
      responses:
        "200":
          description: Token is valid
          schema:
            type: string
        "401":
          description: Invalid token
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Token verification
      tags:
      - auth
  /api/media:
    post:
      consumes:
      - multipart/form-data
      description: Upload media file (image or video) with optional thumbnail
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      - description: Thumbnail file
        in: formData
        name: thumbnail
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handler_media.MediaResponse'
        "400":
          description: Invalid file
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "413":
          description: File too large
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Upload media
      tags:
      - media
  /api/push/register:
    post:
      consumes:
      - application/json
      description: Register a device push notification token for the current user
      parameters:
      - description: Push Token Information
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/internal_handler_push.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Register a push notification token
      tags:
      - push
  /api/push/unregister:
    delete:
      consumes:
      - application/json
      description: Unregister a device push notification token
      parameters:
      - description: Push Token Information
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/internal_handler_push.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Unregister a push notification token
      tags:
      - push
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user by email and password
      parameters:
      - description: Login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handler_auth.AuthResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: User login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Get a new token using a refresh token
      parameters:
      - description: Token refresh data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handler_auth.AuthResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "401":
          description: Invalid refresh token
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Token refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_handler_auth.AuthResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "409":
          description: Email already registered
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: User registration
      tags:
      - auth
  /chats:
    get:
      description: Возвращает все чаты, в которых участвует пользователь
      produces:
      - application/json
      responses:
        "200":
          description: Список чатов пользователя
          schema:
            items:
              $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_messaging.Chat'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Получить чаты пользователя
      tags:
      - messaging
    post:
      consumes:
      - application/json
      description: Создает новый чат с указанными участниками
      parameters:
      - description: Данные для создания чата
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_messaging.CreateChatRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Чат успешно создан
          schema:
            $ref: '#/definitions/internal_handler_messaging.ChatIDResponse'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "409":
          description: Чат с таким ID уже существует
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Создать новый чат
      tags:
      - messaging
  /chats/{chatID}:
    get:
      description: Возвращает информацию о чате и его участниках
      parameters:
      - description: ID чата
        in: path
        name: chatID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Детали чата
          schema:
            $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_messaging.Chat'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Чат не найден
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Получить детали чата
      tags:
      - messaging
  /chats/{chatID}/messages:
    get:
      description: Возвращает сообщения чата с поддержкой пагинации
      parameters:
      - description: ID чата
        in: path
        name: chatID
        required: true
        type: string
      - description: Максимальное количество сообщений (по умолчанию 50)
        in: query
        name: limit
        type: integer
      - description: Смещение (по умолчанию 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Сообщения чата
          schema:
            items:
              $ref: '#/definitions/internal_handler_messaging.ChatMessage'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Чат не найден
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Получить сообщения чата
      tags:
      - messaging
    post:
      consumes:
      - application/json
      description: Отправляет новое сообщение в чат
      parameters:
      - description: ID чата
        in: path
        name: chatID
        required: true
        type: string
      - description: Данные сообщения
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_messaging.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение успешно отправлено
          schema:
            $ref: '#/definitions/internal_handler_messaging.ChatMessage'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Чат не найден
          schema:
            type: string
        "409":
          description: Сообщение с таким ID уже существует
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Отправить сообщение
      tags:
      - messaging
  /chats/{chatID}/participants:
    post:
      consumes:
      - application/json
      description: Добавляет нового участника в существующий чат
      parameters:
      - description: ID чата
        in: path
        name: chatID
        required: true
        type: string
      - description: Данные пользователя для добавления
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_messaging.AddParticipantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Участник успешно добавлен
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Чат не найден
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Добавить участника в чат
      tags:
      - messaging
  /chats/{chatID}/participants/{userID}:
    delete:
      description: Удаляет участника из чата (пользователь может удалить только себя)
      parameters:
      - description: ID чата
        in: path
        name: chatID
        required: true
        type: string
      - description: ID пользователя для удаления
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Участник успешно удален
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Нет прав на удаление этого пользователя
          schema:
            type: string
        "404":
          description: Чат не найден
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Удалить участника из чата
      tags:
      - messaging
  /chats/direct:
    post:
      consumes:
      - application/json
      description: Находит существующий личный чат между двумя пользователями или
        создает новый
      parameters:
      - description: ID второго пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_messaging.GetOrCreateDirectChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ID чата
          schema:
            $ref: '#/definitions/internal_handler_messaging.ChatIDResponse'
        "400":
          description: Некорректный запрос или попытка создать чат с самим собой
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Получить или создать личный чат
      tags:
      - messaging
  /health:
    get:
      description: Возвращает статус сервиса
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cmd_service.HealthResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/cmd_service.HealthResponse'
      summary: Проверка здоровья сервиса
      tags:
      - health
  /messages/{messageID}/reactions:
    post:
      consumes:
      - application/json
      description: Добавляет эмоциональную реакцию к сообщению
      parameters:
      - description: ID сообщения
        in: path
        name: messageID
        required: true
        type: string
      - description: Данные реакции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_messaging.AddReactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Реакция успешно добавлена
          schema:
            $ref: '#/definitions/internal_handler_messaging.AddReactionResponse'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Сообщение не найдено или нет прав для реакции
          schema:
            type: string
        "409":
          description: Реакция с таким ID уже существует
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Добавить реакцию к сообщению
      tags:
      - messaging
  /messages/{messageID}/reactions/{reactionCode}:
    delete:
      description: Удаляет эмоциональную реакцию с сообщения
      parameters:
      - description: ID сообщения
        in: path
        name: messageID
        required: true
        type: string
      - description: Код реакции для удаления
        in: path
        name: reactionCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Реакция успешно удалена
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Удалить реакцию с сообщения
      tags:
      - messaging
  /profiles:
    patch:
      consumes:
      - application/json
      description: Updates an existing user profile (partial update)
      parameters:
      - description: Profile update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.ProfileUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.Profile'
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Profile not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Profile
      tags:
      - profile
    post:
      consumes:
      - application/json
      description: Creates a new user profile
      parameters:
      - description: Profile data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.ProfileCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.Profile'
        "400":
          description: Invalid request body
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "409":
          description: Profile already exists for this user
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Profile
      tags:
      - profile
  /profiles/{userID}:
    get:
      description: Retrieves a user profile by ID
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handler_profile.ProfileResponse'
        "400":
          description: Invalid user ID
          schema:
            type: string
        "404":
          description: Profile not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get Profile
      tags:
      - profile
  /profiles/catalog/cities:
    get:
      description: Retrieves a list of available cities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.City'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Get Cities
      tags:
      - catalog
  /profiles/catalog/genders:
    get:
      description: Retrieves a catalog of genders with translations
      parameters:
      - description: 'Language code (default: en)'
        in: query
        name: lang
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.TranslatedItem'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Get Genders
      tags:
      - catalog
  /profiles/catalog/improv-goals:
    get:
      description: Retrieves a catalog of improv goals with translations
      parameters:
      - description: 'Language code (default: en)'
        in: query
        name: lang
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.TranslatedItem'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Get Improv Goals
      tags:
      - catalog
  /profiles/catalog/improv-styles:
    get:
      description: Retrieves a catalog of improv styles with translations
      parameters:
      - description: 'Language code (default: en)'
        in: query
        name: lang
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_bulatminnakhmetov_brigadka-backend_internal_service_profile.TranslatedItem'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Get Improv Styles
      tags:
      - catalog
  /profiles/search:
    post:
      consumes:
      - application/json
      description: Search for profiles with various filters
      parameters:
      - description: Search filters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_profile.SearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handler_profile.SearchResponse'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Search Profiles
      tags:
      - profile
  /ws/chat:
    get:
      consumes:
      - application/json
      description: Устанавливает WebSocket соединение для обмена сообщениями в реальном
        времени
      produces:
      - application/json
      responses:
        "101":
          description: WebSocket connection established
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Веб-сокет для чата
      tags:
      - messaging
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
